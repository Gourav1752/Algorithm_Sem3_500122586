#include <stdio.h>

struct Job
{
    int id;
    int deadline;
    int profit;
};

void sortJobsByProfit(struct Job jobs[], int n)
{
    for (int i = 0; i < n - 1; i++)
    {
        int maxIdx = i;
        for (int j = i + 1; j < n; j++)
        {
            if (jobs[j].profit > jobs[maxIdx].profit)
            {
                maxIdx = j;
            }
        }
        if (maxIdx != i)
        {
            struct Job temp = jobs[i];
            jobs[i] = jobs[maxIdx];
            jobs[maxIdx] = temp;
        }
    }
}

void jobScheduling(struct Job jobs[], int n)
{
    sortJobsByProfit(jobs, n);
    int result[n];
    int slot[n];

    for (int i = 0; i < n; i++)
        slot[i] = -1;

    for (int i = 0; i < n; i++)
    {
        for (int j = (jobs[i].deadline < n ? jobs[i].deadline : n) - 1; j >= 0; j--)
        {
            if (slot[j] == -1)
            {
                slot[j] = i;
                break;
            }
        }
    }

    printf("Scheduled Jobs: ");
    for (int i = 0; i < n; i++)
    {
        if (slot[i] != -1)
            printf("%d ", jobs[slot[i]].id);
    }
    printf("\n");
}

int main()
{
    struct Job jobs[] = {
        {1, 17, 10},
        {2, 3, 5},
        {3, 1, 7},
        {14, 1, 3}};
    int n = sizeof(jobs) / sizeof(jobs[0]);
    jobScheduling(jobs, n);
    return 0;
}
